addpath('D:\SerialCommunication'); % add a path to the functions
initSerialControl COM13 % initialise com port


%% Parametry zadania
Upp = 29;
Ypp = 32.25;
Umin= 0;
Umax = 90;
Tp=1;
deltaumax = 90;

%% Parametry regulatora PID
%Random
% Kp = 1.7;
% Ti =13;
% Td = 0.9;

%Ziegler-Nichols
Kp = 3.2;
Ti = 11.5;
Td = 2.625;

%Ziegler-Nichols Updated
% Kp = 3.9;
% Ti = 10.5;
% Td = 2.625;

%% Wyznaczone wartoœci r1,r2,r0
r1 = Kp*((Tp/(2*Ti)) -2 *(Td/Tp) -1);
r2 = Kp*Td/Tp;
r0 = Kp*(1+(Tp/(2*Ti)) + (Td/Tp));

%% Inicjalizacja wektorów
kk=1000; 
u(1:kk)=Upp;
y(1:kk)=Ypp;
e(1:kk)=0;

measurements1 = ones(1, 1)*readMeasurements(1);
plot(measurements1)

%% Przyk³adowe wartoœci zadanej yzad
yzad(1:451)=0.9;
yzad(452:1000) = 0.59;
%% Pêtla regulatora
for k=12:kk
 measurements1 = [ measurements1(2:end);readMeasurements(1)];
 y(k)=measurements1(k);
 e(k)=yzad(k)-y(k);
 u(k)=r2*e(k-2)+r1*e(k-1)+r0*e(k)+u(k-1);

%% Skalowanie wartoœci u

% Sprawdzenie czy skok znajduje siê w przedziale
deltau = u(k) - u(k-1);
u(k) = u(k-1) + min(abs(deltau), abs(deltaumax)) * sign(deltau);

% Sprawdzenie czy U znajduje siê w przedziale, ew. œciêcie
u(k) = max(min(u(k),Umax),Umin);
sendControls([5], [u(k)]);
waitForNewIteration();
refreshdata
drawnow
plot(measurements1)
title('Charakterystyki y,y_{zad}'); 
xlabel('k - number próbki');
ylabel('Wartoœæ')
matlab2tikz ('zad5_pp.tex' , 'showInfo' , false)
end
%% Przygotowanie wykresów i wizualizacja 
% t = linspace(1,kk,kk);
% figure
% stairs(t,u,'LineWidth',1.5, Color='r');
% title('u - sterowanie'); 
% xlabel('k - number próbki');
% ylabel("Wartoœæ sterowania")
% % matlab2tikz ('zad4PID_u.tex' , 'showInfo' , false)
% figure
% stairs(t,y,'LineWidth',1.5); 
% hold on;
% stairs(t,yzad,'LineWidth',1, 'LineStyle','--');
% title('Charakterystyki y,y_{zad}'); 
% xlabel('k - number próbki');
% ylabel('Wartoœæ')
% legend("Wartoœæ na wyjœciu y", "Wartoœæ zadana y_{zad}",Location="southwest")
% % matlab2tikz ('zad4PID_y.tex' , 'showInfo' , false) 